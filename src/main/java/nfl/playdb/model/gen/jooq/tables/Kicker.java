/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.Keys;
import nfl.playdb.model.gen.jooq.NflPlays;
import nfl.playdb.model.gen.jooq.tables.records.KickerRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * FGS: 0 - 39 yds; FGM: 40 - 49 yds; FGL: 50+ yds
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Kicker extends TableImpl<KickerRecord> {

	private static final long serialVersionUID = -1291812352;

	/**
	 * The reference instance of <code>nfl_plays.kicker</code>
	 */
	public static final Kicker KICKER = new Kicker();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<KickerRecord> getRecordType() {
		return KickerRecord.class;
	}

	/**
	 * The column <code>nfl_plays.kicker.uid</code>.
	 */
	public final TableField<KickerRecord, Integer> UID = createField("uid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.kicker.gid</code>.
	 */
	public final TableField<KickerRecord, Integer> GID = createField("gid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.kicker.player</code>.
	 */
	public final TableField<KickerRecord, String> PLAYER = createField("player", org.jooq.impl.SQLDataType.VARCHAR.length(7).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.kicker.pat</code>.
	 */
	public final TableField<KickerRecord, Byte> PAT = createField("pat", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.kicker.fgs</code>.
	 */
	public final TableField<KickerRecord, Byte> FGS = createField("fgs", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.kicker.fgm</code>.
	 */
	public final TableField<KickerRecord, Byte> FGM = createField("fgm", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.kicker.fgl</code>.
	 */
	public final TableField<KickerRecord, Byte> FGL = createField("fgl", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.kicker.fpts</code>.
	 */
	public final TableField<KickerRecord, BigDecimal> FPTS = createField("fpts", org.jooq.impl.SQLDataType.DECIMAL.precision(3, 1).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.kicker.game</code>.
	 */
	public final TableField<KickerRecord, Byte> GAME = createField("game", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.kicker.seas</code>.
	 */
	public final TableField<KickerRecord, Byte> SEAS = createField("seas", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.kicker.year</code>.
	 */
	public final TableField<KickerRecord, Integer> YEAR = createField("year", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.kicker.team</code>.
	 */
	public final TableField<KickerRecord, String> TEAM = createField("team", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

	/**
	 * Create a <code>nfl_plays.kicker</code> table reference
	 */
	public Kicker() {
		this("kicker", null);
	}

	/**
	 * Create an aliased <code>nfl_plays.kicker</code> table reference
	 */
	public Kicker(String alias) {
		this(alias, KICKER);
	}

	private Kicker(String alias, Table<KickerRecord> aliased) {
		this(alias, aliased, null);
	}

	private Kicker(String alias, Table<KickerRecord> aliased, Field<?>[] parameters) {
		super(alias, NflPlays.NFL_PLAYS, aliased, parameters, "FGS: 0 - 39 yds; FGM: 40 - 49 yds; FGL: 50+ yds");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<KickerRecord>> getKeys() {
		return Arrays.<UniqueKey<KickerRecord>>asList(Keys.KEY_KICKER_UID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Kicker as(String alias) {
		return new Kicker(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Kicker rename(String name) {
		return new Kicker(name, null);
	}
}
