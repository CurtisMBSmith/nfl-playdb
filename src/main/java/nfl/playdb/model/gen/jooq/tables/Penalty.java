/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.Keys;
import nfl.playdb.model.gen.jooq.NflPlays;
import nfl.playdb.model.gen.jooq.tables.records.PenaltyRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Penalty extends TableImpl<PenaltyRecord> {

	private static final long serialVersionUID = -572187047;

	/**
	 * The reference instance of <code>nfl_plays.penalty</code>
	 */
	public static final Penalty PENALTY = new Penalty();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PenaltyRecord> getRecordType() {
		return PenaltyRecord.class;
	}

	/**
	 * The column <code>nfl_plays.penalty.uid</code>.
	 */
	public final TableField<PenaltyRecord, Integer> UID = createField("uid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.penalty.pid</code>.
	 */
	public final TableField<PenaltyRecord, Integer> PID = createField("pid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.penalty.ptm</code>.
	 */
	public final TableField<PenaltyRecord, String> PTM = createField("ptm", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.penalty.pen</code>.
	 */
	public final TableField<PenaltyRecord, String> PEN = createField("pen", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "");

	/**
	 * The column <code>nfl_plays.penalty.desc</code>.
	 */
	public final TableField<PenaltyRecord, String> DESC = createField("desc", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.penalty.cat</code>.
	 */
	public final TableField<PenaltyRecord, Byte> CAT = createField("cat", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.penalty.pey</code>.
	 */
	public final TableField<PenaltyRecord, Byte> PEY = createField("pey", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.penalty.act</code>.
	 */
	public final TableField<PenaltyRecord, String> ACT = createField("act", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false), this, "");

	/**
	 * Create a <code>nfl_plays.penalty</code> table reference
	 */
	public Penalty() {
		this("penalty", null);
	}

	/**
	 * Create an aliased <code>nfl_plays.penalty</code> table reference
	 */
	public Penalty(String alias) {
		this(alias, PENALTY);
	}

	private Penalty(String alias, Table<PenaltyRecord> aliased) {
		this(alias, aliased, null);
	}

	private Penalty(String alias, Table<PenaltyRecord> aliased, Field<?>[] parameters) {
		super(alias, NflPlays.NFL_PLAYS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PenaltyRecord>> getKeys() {
		return Arrays.<UniqueKey<PenaltyRecord>>asList(Keys.KEY_PENALTY_UID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Penalty as(String alias) {
		return new Penalty(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Penalty rename(String name) {
		return new Penalty(name, null);
	}
}
