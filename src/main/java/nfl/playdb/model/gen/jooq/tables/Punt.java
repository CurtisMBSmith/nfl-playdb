/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.Keys;
import nfl.playdb.model.gen.jooq.NflPlays;
import nfl.playdb.model.gen.jooq.tables.records.PuntRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Punt extends TableImpl<PuntRecord> {

	private static final long serialVersionUID = -179853978;

	/**
	 * The reference instance of <code>nfl_plays.punt</code>
	 */
	public static final Punt PUNT = new Punt();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PuntRecord> getRecordType() {
		return PuntRecord.class;
	}

	/**
	 * The column <code>nfl_plays.punt.pid</code>.
	 */
	public final TableField<PuntRecord, Integer> PID = createField("pid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.punt.punter</code>.
	 */
	public final TableField<PuntRecord, String> PUNTER = createField("punter", org.jooq.impl.SQLDataType.VARCHAR.length(7).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.punt.pgro</code>.
	 */
	public final TableField<PuntRecord, Byte> PGRO = createField("pgro", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.punt.pnet</code>.
	 */
	public final TableField<PuntRecord, Byte> PNET = createField("pnet", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.punt.ptb</code>.
	 */
	public final TableField<PuntRecord, Byte> PTB = createField("ptb", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.punt.pr</code>.
	 */
	public final TableField<PuntRecord, String> PR = createField("pr", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "");

	/**
	 * The column <code>nfl_plays.punt.pry</code>.
	 */
	public final TableField<PuntRecord, Byte> PRY = createField("pry", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.punt.pfc</code>.
	 */
	public final TableField<PuntRecord, Byte> PFC = createField("pfc", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * Create a <code>nfl_plays.punt</code> table reference
	 */
	public Punt() {
		this("punt", null);
	}

	/**
	 * Create an aliased <code>nfl_plays.punt</code> table reference
	 */
	public Punt(String alias) {
		this(alias, PUNT);
	}

	private Punt(String alias, Table<PuntRecord> aliased) {
		this(alias, aliased, null);
	}

	private Punt(String alias, Table<PuntRecord> aliased, Field<?>[] parameters) {
		super(alias, NflPlays.NFL_PLAYS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PuntRecord>> getKeys() {
		return Arrays.<UniqueKey<PuntRecord>>asList(Keys.KEY_PUNT_PID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Punt as(String alias) {
		return new Punt(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Punt rename(String name) {
		return new Punt(name, null);
	}
}
