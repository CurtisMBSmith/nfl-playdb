/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq;


import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.tables.Block;
import nfl.playdb.model.gen.jooq.tables.Conv;
import nfl.playdb.model.gen.jooq.tables.Defense;
import nfl.playdb.model.gen.jooq.tables.Drive;
import nfl.playdb.model.gen.jooq.tables.Fgxp;
import nfl.playdb.model.gen.jooq.tables.Fumble;
import nfl.playdb.model.gen.jooq.tables.Game;
import nfl.playdb.model.gen.jooq.tables.Intercpt;
import nfl.playdb.model.gen.jooq.tables.Kicker;
import nfl.playdb.model.gen.jooq.tables.Koff;
import nfl.playdb.model.gen.jooq.tables.Offense;
import nfl.playdb.model.gen.jooq.tables.Oline;
import nfl.playdb.model.gen.jooq.tables.Pass;
import nfl.playdb.model.gen.jooq.tables.Penalty;
import nfl.playdb.model.gen.jooq.tables.Play;
import nfl.playdb.model.gen.jooq.tables.Player;
import nfl.playdb.model.gen.jooq.tables.Punt;
import nfl.playdb.model.gen.jooq.tables.Redzone;
import nfl.playdb.model.gen.jooq.tables.Rush;
import nfl.playdb.model.gen.jooq.tables.Sack;
import nfl.playdb.model.gen.jooq.tables.Safety;
import nfl.playdb.model.gen.jooq.tables.Tackle;
import nfl.playdb.model.gen.jooq.tables.Team;
import nfl.playdb.model.gen.jooq.tables.records.BlockRecord;
import nfl.playdb.model.gen.jooq.tables.records.ConvRecord;
import nfl.playdb.model.gen.jooq.tables.records.DefenseRecord;
import nfl.playdb.model.gen.jooq.tables.records.DriveRecord;
import nfl.playdb.model.gen.jooq.tables.records.FgxpRecord;
import nfl.playdb.model.gen.jooq.tables.records.FumbleRecord;
import nfl.playdb.model.gen.jooq.tables.records.GameRecord;
import nfl.playdb.model.gen.jooq.tables.records.IntercptRecord;
import nfl.playdb.model.gen.jooq.tables.records.KickerRecord;
import nfl.playdb.model.gen.jooq.tables.records.KoffRecord;
import nfl.playdb.model.gen.jooq.tables.records.OffenseRecord;
import nfl.playdb.model.gen.jooq.tables.records.OlineRecord;
import nfl.playdb.model.gen.jooq.tables.records.PassRecord;
import nfl.playdb.model.gen.jooq.tables.records.PenaltyRecord;
import nfl.playdb.model.gen.jooq.tables.records.PlayRecord;
import nfl.playdb.model.gen.jooq.tables.records.PlayerRecord;
import nfl.playdb.model.gen.jooq.tables.records.PuntRecord;
import nfl.playdb.model.gen.jooq.tables.records.RedzoneRecord;
import nfl.playdb.model.gen.jooq.tables.records.RushRecord;
import nfl.playdb.model.gen.jooq.tables.records.SackRecord;
import nfl.playdb.model.gen.jooq.tables.records.SafetyRecord;
import nfl.playdb.model.gen.jooq.tables.records.TackleRecord;
import nfl.playdb.model.gen.jooq.tables.records.TeamRecord;

import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>nfl_plays</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<BlockRecord> KEY_BLOCK_PID = UniqueKeys0.KEY_BLOCK_PID;
	public static final UniqueKey<ConvRecord> KEY_CONV_PID = UniqueKeys0.KEY_CONV_PID;
	public static final UniqueKey<DefenseRecord> KEY_DEFENSE_UID = UniqueKeys0.KEY_DEFENSE_UID;
	public static final UniqueKey<DriveRecord> KEY_DRIVE_UID = UniqueKeys0.KEY_DRIVE_UID;
	public static final UniqueKey<FgxpRecord> KEY_FGXP_PID = UniqueKeys0.KEY_FGXP_PID;
	public static final UniqueKey<FumbleRecord> KEY_FUMBLE_PID = UniqueKeys0.KEY_FUMBLE_PID;
	public static final UniqueKey<GameRecord> KEY_GAME_GID = UniqueKeys0.KEY_GAME_GID;
	public static final UniqueKey<IntercptRecord> KEY_INTERCPT_PID = UniqueKeys0.KEY_INTERCPT_PID;
	public static final UniqueKey<KickerRecord> KEY_KICKER_UID = UniqueKeys0.KEY_KICKER_UID;
	public static final UniqueKey<KoffRecord> KEY_KOFF_PID = UniqueKeys0.KEY_KOFF_PID;
	public static final UniqueKey<OffenseRecord> KEY_OFFENSE_UID = UniqueKeys0.KEY_OFFENSE_UID;
	public static final UniqueKey<OlineRecord> KEY_OLINE_OLID = UniqueKeys0.KEY_OLINE_OLID;
	public static final UniqueKey<PassRecord> KEY_PASS_PID = UniqueKeys0.KEY_PASS_PID;
	public static final UniqueKey<PenaltyRecord> KEY_PENALTY_UID = UniqueKeys0.KEY_PENALTY_UID;
	public static final UniqueKey<PlayRecord> KEY_PLAY_PID = UniqueKeys0.KEY_PLAY_PID;
	public static final UniqueKey<PlayerRecord> KEY_PLAYER_PLAYER = UniqueKeys0.KEY_PLAYER_PLAYER;
	public static final UniqueKey<PuntRecord> KEY_PUNT_PID = UniqueKeys0.KEY_PUNT_PID;
	public static final UniqueKey<RedzoneRecord> KEY_REDZONE_UID = UniqueKeys0.KEY_REDZONE_UID;
	public static final UniqueKey<RushRecord> KEY_RUSH_PID = UniqueKeys0.KEY_RUSH_PID;
	public static final UniqueKey<SackRecord> KEY_SACK_UID = UniqueKeys0.KEY_SACK_UID;
	public static final UniqueKey<SafetyRecord> KEY_SAFETY_PID = UniqueKeys0.KEY_SAFETY_PID;
	public static final UniqueKey<TackleRecord> KEY_TACKLE_UID = UniqueKeys0.KEY_TACKLE_UID;
	public static final UniqueKey<TeamRecord> KEY_TEAM_TID = UniqueKeys0.KEY_TEAM_TID;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<BlockRecord> KEY_BLOCK_PID = createUniqueKey(Block.BLOCK, Block.BLOCK.PID);
		public static final UniqueKey<ConvRecord> KEY_CONV_PID = createUniqueKey(Conv.CONV, Conv.CONV.PID);
		public static final UniqueKey<DefenseRecord> KEY_DEFENSE_UID = createUniqueKey(Defense.DEFENSE, Defense.DEFENSE.UID);
		public static final UniqueKey<DriveRecord> KEY_DRIVE_UID = createUniqueKey(Drive.DRIVE, Drive.DRIVE.UID);
		public static final UniqueKey<FgxpRecord> KEY_FGXP_PID = createUniqueKey(Fgxp.FGXP, Fgxp.FGXP.PID);
		public static final UniqueKey<FumbleRecord> KEY_FUMBLE_PID = createUniqueKey(Fumble.FUMBLE, Fumble.FUMBLE.PID);
		public static final UniqueKey<GameRecord> KEY_GAME_GID = createUniqueKey(Game.GAME, Game.GAME.GID);
		public static final UniqueKey<IntercptRecord> KEY_INTERCPT_PID = createUniqueKey(Intercpt.INTERCPT, Intercpt.INTERCPT.PID);
		public static final UniqueKey<KickerRecord> KEY_KICKER_UID = createUniqueKey(Kicker.KICKER, Kicker.KICKER.UID);
		public static final UniqueKey<KoffRecord> KEY_KOFF_PID = createUniqueKey(Koff.KOFF, Koff.KOFF.PID);
		public static final UniqueKey<OffenseRecord> KEY_OFFENSE_UID = createUniqueKey(Offense.OFFENSE, Offense.OFFENSE.UID);
		public static final UniqueKey<OlineRecord> KEY_OLINE_OLID = createUniqueKey(Oline.OLINE, Oline.OLINE.OLID);
		public static final UniqueKey<PassRecord> KEY_PASS_PID = createUniqueKey(Pass.PASS, Pass.PASS.PID);
		public static final UniqueKey<PenaltyRecord> KEY_PENALTY_UID = createUniqueKey(Penalty.PENALTY, Penalty.PENALTY.UID);
		public static final UniqueKey<PlayRecord> KEY_PLAY_PID = createUniqueKey(Play.PLAY, Play.PLAY.PID);
		public static final UniqueKey<PlayerRecord> KEY_PLAYER_PLAYER = createUniqueKey(Player.PLAYER, Player.PLAYER.PLAYER_);
		public static final UniqueKey<PuntRecord> KEY_PUNT_PID = createUniqueKey(Punt.PUNT, Punt.PUNT.PID);
		public static final UniqueKey<RedzoneRecord> KEY_REDZONE_UID = createUniqueKey(Redzone.REDZONE, Redzone.REDZONE.UID);
		public static final UniqueKey<RushRecord> KEY_RUSH_PID = createUniqueKey(Rush.RUSH, Rush.RUSH.PID);
		public static final UniqueKey<SackRecord> KEY_SACK_UID = createUniqueKey(Sack.SACK, Sack.SACK.UID);
		public static final UniqueKey<SafetyRecord> KEY_SAFETY_PID = createUniqueKey(Safety.SAFETY, Safety.SAFETY.PID);
		public static final UniqueKey<TackleRecord> KEY_TACKLE_UID = createUniqueKey(Tackle.TACKLE, Tackle.TACKLE.UID);
		public static final UniqueKey<TeamRecord> KEY_TEAM_TID = createUniqueKey(Team.TEAM, Team.TEAM.TID);
	}
}
