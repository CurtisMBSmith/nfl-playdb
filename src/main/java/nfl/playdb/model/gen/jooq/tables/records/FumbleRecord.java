/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq.tables.records;


import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.tables.Fumble;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FumbleRecord extends TableRecordImpl<FumbleRecord> implements Record5<Integer, String, String, Integer, String> {

	private static final long serialVersionUID = 52590193;

	/**
	 * Setter for <code>nfl_plays.fumble.pid</code>.
	 */
	public void setPid(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>nfl_plays.fumble.pid</code>.
	 */
	public Integer getPid() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>nfl_plays.fumble.fum</code>.
	 */
	public void setFum(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>nfl_plays.fumble.fum</code>.
	 */
	public String getFum() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>nfl_plays.fumble.frcv</code>.
	 */
	public void setFrcv(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>nfl_plays.fumble.frcv</code>.
	 */
	public String getFrcv() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>nfl_plays.fumble.fry</code>.
	 */
	public void setFry(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>nfl_plays.fumble.fry</code>.
	 */
	public Integer getFry() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>nfl_plays.fumble.forc</code>.
	 */
	public void setForc(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>nfl_plays.fumble.forc</code>.
	 */
	public String getForc() {
		return (String) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, String, Integer, String> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, String, Integer, String> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Fumble.FUMBLE.PID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Fumble.FUMBLE.FUM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Fumble.FUMBLE.FRCV;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Fumble.FUMBLE.FRY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Fumble.FUMBLE.FORC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getPid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getFum();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getFrcv();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getFry();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getForc();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FumbleRecord value1(Integer value) {
		setPid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FumbleRecord value2(String value) {
		setFum(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FumbleRecord value3(String value) {
		setFrcv(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FumbleRecord value4(Integer value) {
		setFry(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FumbleRecord value5(String value) {
		setForc(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FumbleRecord values(Integer value1, String value2, String value3, Integer value4, String value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached FumbleRecord
	 */
	public FumbleRecord() {
		super(Fumble.FUMBLE);
	}

	/**
	 * Create a detached, initialised FumbleRecord
	 */
	public FumbleRecord(Integer pid, String fum, String frcv, Integer fry, String forc) {
		super(Fumble.FUMBLE);

		setValue(0, pid);
		setValue(1, fum);
		setValue(2, frcv);
		setValue(3, fry);
		setValue(4, forc);
	}
}
