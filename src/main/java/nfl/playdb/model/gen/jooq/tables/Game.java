/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.Keys;
import nfl.playdb.model.gen.jooq.NflPlays;
import nfl.playdb.model.gen.jooq.tables.records.GameRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Game extends TableImpl<GameRecord> {

	private static final long serialVersionUID = 1204484959;

	/**
	 * The reference instance of <code>nfl_plays.game</code>
	 */
	public static final Game GAME = new Game();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<GameRecord> getRecordType() {
		return GameRecord.class;
	}

	/**
	 * The column <code>nfl_plays.game.gid</code>.
	 */
	public final TableField<GameRecord, Integer> GID = createField("gid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.game.seas</code>.
	 */
	public final TableField<GameRecord, Integer> SEAS = createField("seas", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.game.wk</code>.
	 */
	public final TableField<GameRecord, Byte> WK = createField("wk", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.game.day</code>.
	 */
	public final TableField<GameRecord, String> DAY = createField("day", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.game.v</code>.
	 */
	public final TableField<GameRecord, String> V = createField("v", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.game.h</code>.
	 */
	public final TableField<GameRecord, String> H = createField("h", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.game.stad</code>.
	 */
	public final TableField<GameRecord, String> STAD = createField("stad", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.game.temp</code>.
	 */
	public final TableField<GameRecord, String> TEMP = createField("temp", org.jooq.impl.SQLDataType.VARCHAR.length(4), this, "");

	/**
	 * The column <code>nfl_plays.game.humd</code>.
	 */
	public final TableField<GameRecord, String> HUMD = createField("humd", org.jooq.impl.SQLDataType.VARCHAR.length(4), this, "");

	/**
	 * The column <code>nfl_plays.game.wspd</code>.
	 */
	public final TableField<GameRecord, String> WSPD = createField("wspd", org.jooq.impl.SQLDataType.VARCHAR.length(4), this, "");

	/**
	 * The column <code>nfl_plays.game.wdir</code>.
	 */
	public final TableField<GameRecord, String> WDIR = createField("wdir", org.jooq.impl.SQLDataType.VARCHAR.length(4), this, "");

	/**
	 * The column <code>nfl_plays.game.cond</code>.
	 */
	public final TableField<GameRecord, String> COND = createField("cond", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

	/**
	 * The column <code>nfl_plays.game.surf</code>.
	 */
	public final TableField<GameRecord, String> SURF = createField("surf", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.game.ou</code>.
	 */
	public final TableField<GameRecord, Byte> OU = createField("ou", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.game.sprv</code>.
	 */
	public final TableField<GameRecord, BigDecimal> SPRV = createField("sprv", org.jooq.impl.SQLDataType.DECIMAL.precision(3, 1).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.game.ptsv</code>.
	 */
	public final TableField<GameRecord, Byte> PTSV = createField("ptsv", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.game.ptsh</code>.
	 */
	public final TableField<GameRecord, Byte> PTSH = createField("ptsh", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * Create a <code>nfl_plays.game</code> table reference
	 */
	public Game() {
		this("game", null);
	}

	/**
	 * Create an aliased <code>nfl_plays.game</code> table reference
	 */
	public Game(String alias) {
		this(alias, GAME);
	}

	private Game(String alias, Table<GameRecord> aliased) {
		this(alias, aliased, null);
	}

	private Game(String alias, Table<GameRecord> aliased, Field<?>[] parameters) {
		super(alias, NflPlays.NFL_PLAYS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<GameRecord>> getKeys() {
		return Arrays.<UniqueKey<GameRecord>>asList(Keys.KEY_GAME_GID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Game as(String alias) {
		return new Game(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Game rename(String name) {
		return new Game(name, null);
	}
}
