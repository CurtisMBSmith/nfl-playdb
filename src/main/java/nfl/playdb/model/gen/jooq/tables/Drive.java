/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.Keys;
import nfl.playdb.model.gen.jooq.NflPlays;
import nfl.playdb.model.gen.jooq.tables.records.DriveRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Drive extends TableImpl<DriveRecord> {

	private static final long serialVersionUID = -113962301;

	/**
	 * The reference instance of <code>nfl_plays.drive</code>
	 */
	public static final Drive DRIVE = new Drive();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DriveRecord> getRecordType() {
		return DriveRecord.class;
	}

	/**
	 * The column <code>nfl_plays.drive.uid</code>.
	 */
	public final TableField<DriveRecord, Integer> UID = createField("uid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.gid</code>.
	 */
	public final TableField<DriveRecord, Integer> GID = createField("gid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.fpid</code>.
	 */
	public final TableField<DriveRecord, Integer> FPID = createField("fpid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.tname</code>.
	 */
	public final TableField<DriveRecord, String> TNAME = createField("tname", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.drvn</code>.
	 */
	public final TableField<DriveRecord, Byte> DRVN = createField("drvn", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.obt</code>.
	 */
	public final TableField<DriveRecord, String> OBT = createField("obt", org.jooq.impl.SQLDataType.VARCHAR.length(4), this, "");

	/**
	 * The column <code>nfl_plays.drive.qtr</code>.
	 */
	public final TableField<DriveRecord, Byte> QTR = createField("qtr", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.min</code>.
	 */
	public final TableField<DriveRecord, Byte> MIN = createField("min", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.sec</code>.
	 */
	public final TableField<DriveRecord, Byte> SEC = createField("sec", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.yfog</code>.
	 */
	public final TableField<DriveRecord, Byte> YFOG = createField("yfog", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.plays</code>.
	 */
	public final TableField<DriveRecord, Byte> PLAYS = createField("plays", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.succ</code>.
	 */
	public final TableField<DriveRecord, Byte> SUCC = createField("succ", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.rfd</code>.
	 */
	public final TableField<DriveRecord, Byte> RFD = createField("rfd", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.pfd</code>.
	 */
	public final TableField<DriveRecord, Byte> PFD = createField("pfd", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.ofd</code>.
	 */
	public final TableField<DriveRecord, Byte> OFD = createField("ofd", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.ry</code>.
	 */
	public final TableField<DriveRecord, Integer> RY = createField("ry", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.ra</code>.
	 */
	public final TableField<DriveRecord, Byte> RA = createField("ra", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.py</code>.
	 */
	public final TableField<DriveRecord, Integer> PY = createField("py", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.pa</code>.
	 */
	public final TableField<DriveRecord, Byte> PA = createField("pa", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.pc</code>.
	 */
	public final TableField<DriveRecord, Byte> PC = createField("pc", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.peyf</code>.
	 */
	public final TableField<DriveRecord, Byte> PEYF = createField("peyf", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.peya</code>.
	 */
	public final TableField<DriveRecord, Byte> PEYA = createField("peya", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.net</code>.
	 */
	public final TableField<DriveRecord, Integer> NET = createField("net", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.drive.res</code>.
	 */
	public final TableField<DriveRecord, String> RES = createField("res", org.jooq.impl.SQLDataType.VARCHAR.length(4), this, "");

	/**
	 * Create a <code>nfl_plays.drive</code> table reference
	 */
	public Drive() {
		this("drive", null);
	}

	/**
	 * Create an aliased <code>nfl_plays.drive</code> table reference
	 */
	public Drive(String alias) {
		this(alias, DRIVE);
	}

	private Drive(String alias, Table<DriveRecord> aliased) {
		this(alias, aliased, null);
	}

	private Drive(String alias, Table<DriveRecord> aliased, Field<?>[] parameters) {
		super(alias, NflPlays.NFL_PLAYS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<DriveRecord>> getKeys() {
		return Arrays.<UniqueKey<DriveRecord>>asList(Keys.KEY_DRIVE_UID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Drive as(String alias) {
		return new Drive(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Drive rename(String name) {
		return new Drive(name, null);
	}
}
