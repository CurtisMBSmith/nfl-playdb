/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.Keys;
import nfl.playdb.model.gen.jooq.NflPlays;
import nfl.playdb.model.gen.jooq.tables.records.FgxpRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Fgxp extends TableImpl<FgxpRecord> {

	private static final long serialVersionUID = 694829875;

	/**
	 * The reference instance of <code>nfl_plays.fgxp</code>
	 */
	public static final Fgxp FGXP = new Fgxp();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FgxpRecord> getRecordType() {
		return FgxpRecord.class;
	}

	/**
	 * The column <code>nfl_plays.fgxp.pid</code>.
	 */
	public final TableField<FgxpRecord, Integer> PID = createField("pid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.fgxp.fgxp</code>.
	 */
	public final TableField<FgxpRecord, String> FGXP_ = createField("fgxp", org.jooq.impl.SQLDataType.VARCHAR.length(2).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.fgxp.fkicker</code>.
	 */
	public final TableField<FgxpRecord, String> FKICKER = createField("fkicker", org.jooq.impl.SQLDataType.VARCHAR.length(7).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.fgxp.dist</code>.
	 */
	public final TableField<FgxpRecord, Byte> DIST = createField("dist", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.fgxp.good</code>.
	 */
	public final TableField<FgxpRecord, Byte> GOOD = createField("good", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * Create a <code>nfl_plays.fgxp</code> table reference
	 */
	public Fgxp() {
		this("fgxp", null);
	}

	/**
	 * Create an aliased <code>nfl_plays.fgxp</code> table reference
	 */
	public Fgxp(String alias) {
		this(alias, FGXP);
	}

	private Fgxp(String alias, Table<FgxpRecord> aliased) {
		this(alias, aliased, null);
	}

	private Fgxp(String alias, Table<FgxpRecord> aliased, Field<?>[] parameters) {
		super(alias, NflPlays.NFL_PLAYS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<FgxpRecord>> getKeys() {
		return Arrays.<UniqueKey<FgxpRecord>>asList(Keys.KEY_FGXP_PID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Fgxp as(String alias) {
		return new Fgxp(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Fgxp rename(String name) {
		return new Fgxp(name, null);
	}
}
