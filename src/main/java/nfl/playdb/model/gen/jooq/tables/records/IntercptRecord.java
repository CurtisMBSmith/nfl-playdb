/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq.tables.records;


import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.tables.Intercpt;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * Interceptions
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IntercptRecord extends TableRecordImpl<IntercptRecord> implements Record4<Integer, String, String, Byte> {

	private static final long serialVersionUID = 841738832;

	/**
	 * Setter for <code>nfl_plays.intercpt.pid</code>.
	 */
	public void setPid(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>nfl_plays.intercpt.pid</code>.
	 */
	public Integer getPid() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>nfl_plays.intercpt.psr</code>.
	 */
	public void setPsr(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>nfl_plays.intercpt.psr</code>.
	 */
	public String getPsr() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>nfl_plays.intercpt.int</code>.
	 */
	public void setInt(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>nfl_plays.intercpt.int</code>.
	 */
	public String getInt() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>nfl_plays.intercpt.iry</code>.
	 */
	public void setIry(Byte value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>nfl_plays.intercpt.iry</code>.
	 */
	public Byte getIry() {
		return (Byte) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Byte> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Byte> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Intercpt.INTERCPT.PID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Intercpt.INTERCPT.PSR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Intercpt.INTERCPT.INT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field4() {
		return Intercpt.INTERCPT.IRY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getPid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getPsr();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getInt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value4() {
		return getIry();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IntercptRecord value1(Integer value) {
		setPid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IntercptRecord value2(String value) {
		setPsr(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IntercptRecord value3(String value) {
		setInt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IntercptRecord value4(Byte value) {
		setIry(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IntercptRecord values(Integer value1, String value2, String value3, Byte value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached IntercptRecord
	 */
	public IntercptRecord() {
		super(Intercpt.INTERCPT);
	}

	/**
	 * Create a detached, initialised IntercptRecord
	 */
	public IntercptRecord(Integer pid, String psr, String int_, Byte iry) {
		super(Intercpt.INTERCPT);

		setValue(0, pid);
		setValue(1, psr);
		setValue(2, int_);
		setValue(3, iry);
	}
}
