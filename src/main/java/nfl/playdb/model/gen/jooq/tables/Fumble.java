/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.Keys;
import nfl.playdb.model.gen.jooq.NflPlays;
import nfl.playdb.model.gen.jooq.tables.records.FumbleRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Fumble extends TableImpl<FumbleRecord> {

	private static final long serialVersionUID = -367177868;

	/**
	 * The reference instance of <code>nfl_plays.fumble</code>
	 */
	public static final Fumble FUMBLE = new Fumble();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FumbleRecord> getRecordType() {
		return FumbleRecord.class;
	}

	/**
	 * The column <code>nfl_plays.fumble.pid</code>.
	 */
	public final TableField<FumbleRecord, Integer> PID = createField("pid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.fumble.fum</code>.
	 */
	public final TableField<FumbleRecord, String> FUM = createField("fum", org.jooq.impl.SQLDataType.VARCHAR.length(7).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.fumble.frcv</code>.
	 */
	public final TableField<FumbleRecord, String> FRCV = createField("frcv", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "");

	/**
	 * The column <code>nfl_plays.fumble.fry</code>.
	 */
	public final TableField<FumbleRecord, Integer> FRY = createField("fry", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.fumble.forc</code>.
	 */
	public final TableField<FumbleRecord, String> FORC = createField("forc", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "");

	/**
	 * Create a <code>nfl_plays.fumble</code> table reference
	 */
	public Fumble() {
		this("fumble", null);
	}

	/**
	 * Create an aliased <code>nfl_plays.fumble</code> table reference
	 */
	public Fumble(String alias) {
		this(alias, FUMBLE);
	}

	private Fumble(String alias, Table<FumbleRecord> aliased) {
		this(alias, aliased, null);
	}

	private Fumble(String alias, Table<FumbleRecord> aliased, Field<?>[] parameters) {
		super(alias, NflPlays.NFL_PLAYS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<FumbleRecord>> getKeys() {
		return Arrays.<UniqueKey<FumbleRecord>>asList(Keys.KEY_FUMBLE_PID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Fumble as(String alias) {
		return new Fumble(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Fumble rename(String name) {
		return new Fumble(name, null);
	}
}
