/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq.tables.records;


import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.tables.Oline;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OlineRecord extends TableRecordImpl<OlineRecord> implements Record6<Integer, String, String, String, String, String> {

	private static final long serialVersionUID = 1356410152;

	/**
	 * Setter for <code>nfl_plays.oline.olid</code>.
	 */
	public void setOlid(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>nfl_plays.oline.olid</code>.
	 */
	public Integer getOlid() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>nfl_plays.oline.lt</code>.
	 */
	public void setLt(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>nfl_plays.oline.lt</code>.
	 */
	public String getLt() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>nfl_plays.oline.lg</code>.
	 */
	public void setLg(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>nfl_plays.oline.lg</code>.
	 */
	public String getLg() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>nfl_plays.oline.c</code>.
	 */
	public void setC(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>nfl_plays.oline.c</code>.
	 */
	public String getC() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>nfl_plays.oline.rg</code>.
	 */
	public void setRg(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>nfl_plays.oline.rg</code>.
	 */
	public String getRg() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>nfl_plays.oline.rt</code>.
	 */
	public void setRt(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>nfl_plays.oline.rt</code>.
	 */
	public String getRt() {
		return (String) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, String, String, String, String> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, String, String, String, String> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Oline.OLINE.OLID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Oline.OLINE.LT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Oline.OLINE.LG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Oline.OLINE.C;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Oline.OLINE.RG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Oline.OLINE.RT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getOlid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getLt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getLg();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getC();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getRg();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getRt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OlineRecord value1(Integer value) {
		setOlid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OlineRecord value2(String value) {
		setLt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OlineRecord value3(String value) {
		setLg(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OlineRecord value4(String value) {
		setC(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OlineRecord value5(String value) {
		setRg(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OlineRecord value6(String value) {
		setRt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OlineRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached OlineRecord
	 */
	public OlineRecord() {
		super(Oline.OLINE);
	}

	/**
	 * Create a detached, initialised OlineRecord
	 */
	public OlineRecord(Integer olid, String lt, String lg, String c, String rg, String rt) {
		super(Oline.OLINE);

		setValue(0, olid);
		setValue(1, lt);
		setValue(2, lg);
		setValue(3, c);
		setValue(4, rg);
		setValue(5, rt);
	}
}
