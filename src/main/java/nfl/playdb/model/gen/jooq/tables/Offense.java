/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.Keys;
import nfl.playdb.model.gen.jooq.NflPlays;
import nfl.playdb.model.gen.jooq.tables.records.OffenseRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Offense extends TableImpl<OffenseRecord> {

	private static final long serialVersionUID = -179849279;

	/**
	 * The reference instance of <code>nfl_plays.offense</code>
	 */
	public static final Offense OFFENSE = new Offense();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OffenseRecord> getRecordType() {
		return OffenseRecord.class;
	}

	/**
	 * The column <code>nfl_plays.offense.uid</code>.
	 */
	public final TableField<OffenseRecord, Integer> UID = createField("uid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.gid</code>.
	 */
	public final TableField<OffenseRecord, Integer> GID = createField("gid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.player</code>.
	 */
	public final TableField<OffenseRecord, String> PLAYER = createField("player", org.jooq.impl.SQLDataType.VARCHAR.length(7).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.pa</code>.
	 */
	public final TableField<OffenseRecord, Byte> PA = createField("pa", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.pc</code>.
	 */
	public final TableField<OffenseRecord, Byte> PC = createField("pc", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.py</code>.
	 */
	public final TableField<OffenseRecord, Integer> PY = createField("py", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.int</code>.
	 */
	public final TableField<OffenseRecord, Byte> INT = createField("int", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.tdp</code>.
	 */
	public final TableField<OffenseRecord, Byte> TDP = createField("tdp", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.ra</code>.
	 */
	public final TableField<OffenseRecord, Byte> RA = createField("ra", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.sra</code>.
	 */
	public final TableField<OffenseRecord, Byte> SRA = createField("sra", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.ry</code>.
	 */
	public final TableField<OffenseRecord, Integer> RY = createField("ry", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.tdr</code>.
	 */
	public final TableField<OffenseRecord, Byte> TDR = createField("tdr", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.trg</code>.
	 */
	public final TableField<OffenseRecord, Byte> TRG = createField("trg", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.rec</code>.
	 */
	public final TableField<OffenseRecord, Byte> REC = createField("rec", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.recy</code>.
	 */
	public final TableField<OffenseRecord, Integer> RECY = createField("recy", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.tdre</code>.
	 */
	public final TableField<OffenseRecord, Byte> TDRE = createField("tdre", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.fuml</code>.
	 */
	public final TableField<OffenseRecord, Byte> FUML = createField("fuml", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.peny</code>.
	 */
	public final TableField<OffenseRecord, Byte> PENY = createField("peny", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.plays</code>.
	 */
	public final TableField<OffenseRecord, Integer> PLAYS = createField("plays", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.fpts</code>.
	 */
	public final TableField<OffenseRecord, BigDecimal> FPTS = createField("fpts", org.jooq.impl.SQLDataType.DECIMAL.precision(3, 1).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.game</code>.
	 */
	public final TableField<OffenseRecord, Byte> GAME = createField("game", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.seas</code>.
	 */
	public final TableField<OffenseRecord, Byte> SEAS = createField("seas", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.year</code>.
	 */
	public final TableField<OffenseRecord, Integer> YEAR = createField("year", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.offense.team</code>.
	 */
	public final TableField<OffenseRecord, String> TEAM = createField("team", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

	/**
	 * Create a <code>nfl_plays.offense</code> table reference
	 */
	public Offense() {
		this("offense", null);
	}

	/**
	 * Create an aliased <code>nfl_plays.offense</code> table reference
	 */
	public Offense(String alias) {
		this(alias, OFFENSE);
	}

	private Offense(String alias, Table<OffenseRecord> aliased) {
		this(alias, aliased, null);
	}

	private Offense(String alias, Table<OffenseRecord> aliased, Field<?>[] parameters) {
		super(alias, NflPlays.NFL_PLAYS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OffenseRecord>> getKeys() {
		return Arrays.<UniqueKey<OffenseRecord>>asList(Keys.KEY_OFFENSE_UID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Offense as(String alias) {
		return new Offense(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Offense rename(String name) {
		return new Offense(name, null);
	}
}
