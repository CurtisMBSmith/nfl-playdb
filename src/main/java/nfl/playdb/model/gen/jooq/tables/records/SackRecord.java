/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.tables.Sack;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SackRecord extends TableRecordImpl<SackRecord> implements Record6<Integer, Integer, String, String, BigDecimal, Integer> {

	private static final long serialVersionUID = -1058601011;

	/**
	 * Setter for <code>nfl_plays.sack.uid</code>.
	 */
	public void setUid(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>nfl_plays.sack.uid</code>.
	 */
	public Integer getUid() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>nfl_plays.sack.pid</code>.
	 */
	public void setPid(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>nfl_plays.sack.pid</code>.
	 */
	public Integer getPid() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>nfl_plays.sack.qb</code>.
	 */
	public void setQb(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>nfl_plays.sack.qb</code>.
	 */
	public String getQb() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>nfl_plays.sack.sk</code>.
	 */
	public void setSk(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>nfl_plays.sack.sk</code>.
	 */
	public String getSk() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>nfl_plays.sack.value</code>.
	 */
	public void setValue(BigDecimal value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>nfl_plays.sack.value</code>.
	 */
	public BigDecimal getValue() {
		return (BigDecimal) getValue(4);
	}

	/**
	 * Setter for <code>nfl_plays.sack.ydsl</code>.
	 */
	public void setYdsl(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>nfl_plays.sack.ydsl</code>.
	 */
	public Integer getYdsl() {
		return (Integer) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, Integer, String, String, BigDecimal, Integer> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, Integer, String, String, BigDecimal, Integer> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Sack.SACK.UID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Sack.SACK.PID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Sack.SACK.QB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Sack.SACK.SK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field5() {
		return Sack.SACK.VALUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Sack.SACK.YDSL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getUid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getPid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getQb();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getSk();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value5() {
		return getValue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getYdsl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SackRecord value1(Integer value) {
		setUid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SackRecord value2(Integer value) {
		setPid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SackRecord value3(String value) {
		setQb(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SackRecord value4(String value) {
		setSk(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SackRecord value5(BigDecimal value) {
		setValue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SackRecord value6(Integer value) {
		setYdsl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SackRecord values(Integer value1, Integer value2, String value3, String value4, BigDecimal value5, Integer value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SackRecord
	 */
	public SackRecord() {
		super(Sack.SACK);
	}

	/**
	 * Create a detached, initialised SackRecord
	 */
	public SackRecord(Integer uid, Integer pid, String qb, String sk, BigDecimal value, Integer ydsl) {
		super(Sack.SACK);

		setValue(0, uid);
		setValue(1, pid);
		setValue(2, qb);
		setValue(3, sk);
		setValue(4, value);
		setValue(5, ydsl);
	}
}
