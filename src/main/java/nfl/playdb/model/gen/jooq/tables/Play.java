/**
 * This class is generated by jOOQ
 */
package nfl.playdb.model.gen.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nfl.playdb.model.gen.jooq.Keys;
import nfl.playdb.model.gen.jooq.NflPlays;
import nfl.playdb.model.gen.jooq.tables.records.PlayRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Play extends TableImpl<PlayRecord> {

	private static final long serialVersionUID = -392828402;

	/**
	 * The reference instance of <code>nfl_plays.play</code>
	 */
	public static final Play PLAY = new Play();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PlayRecord> getRecordType() {
		return PlayRecord.class;
	}

	/**
	 * The column <code>nfl_plays.play.gid</code>.
	 */
	public final TableField<PlayRecord, Integer> GID = createField("gid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.pid</code>.
	 */
	public final TableField<PlayRecord, Integer> PID = createField("pid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.off</code>.
	 */
	public final TableField<PlayRecord, String> OFF = createField("off", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.def</code>.
	 */
	public final TableField<PlayRecord, String> DEF = createField("def", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.type</code>.
	 */
	public final TableField<PlayRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(4).nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.dseq</code>.
	 */
	public final TableField<PlayRecord, Byte> DSEQ = createField("dseq", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.len</code>.
	 */
	public final TableField<PlayRecord, Byte> LEN = createField("len", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.qtr</code>.
	 */
	public final TableField<PlayRecord, Byte> QTR = createField("qtr", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.min</code>.
	 */
	public final TableField<PlayRecord, Byte> MIN = createField("min", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.sec</code>.
	 */
	public final TableField<PlayRecord, Byte> SEC = createField("sec", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.ptso</code>.
	 */
	public final TableField<PlayRecord, Byte> PTSO = createField("ptso", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.ptsd</code>.
	 */
	public final TableField<PlayRecord, Byte> PTSD = createField("ptsd", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.timo</code>.
	 */
	public final TableField<PlayRecord, Byte> TIMO = createField("timo", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.timd</code>.
	 */
	public final TableField<PlayRecord, Byte> TIMD = createField("timd", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.dwn</code>.
	 */
	public final TableField<PlayRecord, Byte> DWN = createField("dwn", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.ytg</code>.
	 */
	public final TableField<PlayRecord, Byte> YTG = createField("ytg", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.yfog</code>.
	 */
	public final TableField<PlayRecord, Byte> YFOG = createField("yfog", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.zone</code>.
	 */
	public final TableField<PlayRecord, Byte> ZONE = createField("zone", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.fd</code>.
	 */
	public final TableField<PlayRecord, Byte> FD = createField("fd", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.sg</code>.
	 */
	public final TableField<PlayRecord, Byte> SG = createField("sg", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.nh</code>.
	 */
	public final TableField<PlayRecord, Byte> NH = createField("nh", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.pts</code>.
	 */
	public final TableField<PlayRecord, Byte> PTS = createField("pts", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.tck</code>.
	 */
	public final TableField<PlayRecord, Byte> TCK = createField("tck", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.sk</code>.
	 */
	public final TableField<PlayRecord, Byte> SK = createField("sk", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.pen</code>.
	 */
	public final TableField<PlayRecord, Byte> PEN = createField("pen", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.int</code>.
	 */
	public final TableField<PlayRecord, Byte> INT = createField("int", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.fum</code>.
	 */
	public final TableField<PlayRecord, Byte> FUM = createField("fum", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.saf</code>.
	 */
	public final TableField<PlayRecord, Byte> SAF = createField("saf", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.blk</code>.
	 */
	public final TableField<PlayRecord, Byte> BLK = createField("blk", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nfl_plays.play.olid</code>.
	 */
	public final TableField<PlayRecord, Integer> OLID = createField("olid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>nfl_plays.play</code> table reference
	 */
	public Play() {
		this("play", null);
	}

	/**
	 * Create an aliased <code>nfl_plays.play</code> table reference
	 */
	public Play(String alias) {
		this(alias, PLAY);
	}

	private Play(String alias, Table<PlayRecord> aliased) {
		this(alias, aliased, null);
	}

	private Play(String alias, Table<PlayRecord> aliased, Field<?>[] parameters) {
		super(alias, NflPlays.NFL_PLAYS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PlayRecord>> getKeys() {
		return Arrays.<UniqueKey<PlayRecord>>asList(Keys.KEY_PLAY_PID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Play as(String alias) {
		return new Play(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Play rename(String name) {
		return new Play(name, null);
	}
}
